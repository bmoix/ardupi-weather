arduino:
    # Name of the sensors (it must correspond to one of the commands names send by the arduino) and a data
    # identifier.
    sensors : 
        {
            BMP180T : "temperature",
            BMP180P : "pressure",
            DHT22T  : "temperature",
            DHT22H  : "humidity",
            DHT22HI : "heatIndex",
            BH1750  : "lux"
        }

    # If 'test' is used, the program generates random values for the sensors
    usedConnection: test

    usb:    
        port : 'ttyACM0'
        baud : 57600

    433mhz:
        rxPin: 27   # GPIO pin
        bps: 2000
        enableRepetitions: yes
        # Time in seconds, if a value is the same as the previous one and the time between the two values is less
        # than maxRepetitionTime then the value will be seen as a repetition, and as a result will be discarded.
        maxRepetitionTime: 1

    nrf24l01p:
        repetitions: 15         # Maximum number of repetitions is 15

# All the information relative to the data and the database.
data:
    # Name of the database.
    name : 'weather'
    # Data identifier and it's type.
    values :
        {
            temperature : "FLOAT",
            pressure    : "FLOAT",
            humidity    : "FLOAT",
            heatIndex   : "FLOAT",
            lux         : "INTEGER"
        }

    usedDB: "mongo"

    sqlite: 
        path : "default"

    mongo : 
        uri: "mongodb://127.0.0.1:27017"

    # History record of the data.
    history:
        enable: yes
        name: "history"
        updateEvery : {d : 0, h : 0, m : 4, s : 0}

    # It can only be enabled if history is enabled
    dailyHistory:
        enable: yes
        name: "dailyHistory"

    currentData:
        enable: yes
        name: "currentData"
        updateEvery: {d: 0, h: 0, m: 2, s: 0}

webserver:
    enable: yes

    host: '0.0.0.0'
    port: 5000

    # Title and subtitle shown in the web.
    title: 'My weather'
    subtitle: ""
    headerImage: "header.jpg"       # Name of the image header, it must be at flaskfiles/static/img
    names:
        # Data identifier and the name shown in the web.
        sensors:
            {
                temperature : Temperature,
                pressure    : Atmospheric pressure,
                humidity    : Humidity,
                heatIndex   : Heat index,
                lux         : Illuminance
            }
        # Some words and the word to be shown.
        average: average
        range: range
        type: Type
        value: Value

    # Time in seconds, it is the offset between new recordings into the database and live web updates.
    updateOffset: 5 
    charts:
        # Definition of the colors to be used.
        colors: ['#2f7ed8', '#0d233a', '#8bbc21', '#910000', '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a']
        history:
            enable: yes
            name: 'History'
            height: 600
            panels:
                [
                    {
                        name : "Temperature",
                        type : "spline",
                        values : ["temperature","heatIndex"],
                        units : "ºC",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "Atmospheric pressure",
                        type : "spline",
                        values : ["pressure"],
                        units : "hPa",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "Humidity",
                        type : "spline",
                        values : ["humidity"],
                        units : "%",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "Illuminance",
                        type : "spline",
                        values : ["lux"],
                        units : "Lux",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2,  #Offset of the panel in respect of the next one
                        min: 0      #Minimum value for the Y Axis.
                    }
                ]
        dailyHistory:
            enable: yes
            name: 'Daily history'
            height: 600
            showAVG: yes
            showMINMAX: yes
            panels:
                [
                    {
                        name : "Temperature",
                        values : ["temperature","heatIndex"],
                        units : "ºC",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "Atmospheric pressure",
                        values : ["pressure"],
                        units : "hPa",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "humidity",
                        values : ["humidity"],
                        units : "%",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2   #Offset of the panel in respect of the next one
                    },
                    {
                        name : "Illuminance",
                        values : ["lux"],
                        units : "Lux",
                        height: 23, #Percentage of the panel in the chart
                        offset: 2,  #Offset of the panel in respect of the next one
                        min: 0      #Minimum value for the Y Axis.
                    }
                ]

    liveData:
        enable: yes
        name: 'Live data'        
